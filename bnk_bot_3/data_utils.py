import os
from datetime import datetime

from openpyxl import Workbook, load_workbook

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –ü–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
DATA_DIR = "/config/bnk_bot/data"
GRAPHS_DIR = "/config/bnk_bot/graphs"
os.makedirs(DATA_DIR, exist_ok=True)
os.makedirs(GRAPHS_DIR, exist_ok=True)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –¥–∞–Ω–Ω—ã—Ö (—Å —Ä–æ—Ç–∞—Ü–∏–µ–π –ø–æ –º–µ—Å—è—Ü–∞–º)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def get_file_path(dt=None) -> str:
    """
    –ü—É—Ç—å –∫ Excel-—Ñ–∞–π–ª—É –º–µ—Å—è—Ü–∞ –ø–æ –¥–∞—Ç–µ dt (–µ—Å–ª–∏ dt=None ‚Äî —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞).
    –§–æ—Ä–º–∞—Ç: /config/bnk_bot/data/YYYY-MM.xlsx
    """
    if dt is None:
        dt = datetime.now()
    return os.path.join(DATA_DIR, f"{dt.strftime('%Y-%m')}.xlsx")


def get_csv_file() -> str:
    """
    –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º: –≤–µ—Ä–Ω—É—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¢–ï–ö–£–©–ï–ì–û –º–µ—Å—è—Ü–∞.
    """
    return get_file_path(datetime.now())


def get_month_file_str(ym: str) -> str:
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –º–µ—Å—è—Ü–∞ –ø–æ —Å—Ç—Ä–æ–∫–µ 'YYYY-MM' (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è).
    """
    return os.path.join(DATA_DIR, f"{ym}.xlsx")


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def save_entry(date: datetime, user: str, values: dict):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –≤ Excel –ú–ï–°–Ø–¶–ê, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –¥–∞—Ç–µ –∑–∞–ø–∏—Å–∏.
    –ö–æ–ª–æ–Ω–∫–∏: –î–∞—Ç–∞ | –ò–º—è | –ü–∞–∫–æ–≤ | –í–µ—Å | –ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞ | –§–ª–µ–∫—Å–∞ | –≠–∫—Å—Ç—Ä—É–∑–∏—è | –ò—Ç–æ–≥–æ
    """
    file_path = get_file_path(date)  # –∫–ª—é—á–µ–≤–∞—è —Å—Ç—Ä–æ–∫–∞: —Ä–æ—Ç–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü—É –∑–∞–ø–∏—Å–∏

    if os.path.exists(file_path):
        wb = load_workbook(file_path)
        ws = wb.active
    else:
        wb = Workbook()
        ws = wb.active
        ws.append(["–î–∞—Ç–∞", "–ò–º—è", "–ü–∞–∫–æ–≤", "–í–µ—Å", "–ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞", "–§–ª–µ–∫—Å–∞", "–≠–∫—Å—Ç—Ä—É–∑–∏—è", "–ò—Ç–æ–≥–æ"])

    ws.append([
        date.strftime('%Y-%m-%d %H:%M'),
        user,
        float(values.get("–ü–∞–∫–æ–≤", 0) or 0),
        float(values.get("–í–µ—Å", 0) or 0),
        float(values.get("–ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞", 0) or 0),
        float(values.get("–§–ª–µ–∫—Å–∞", 0) or 0),
        float(values.get("–≠–∫—Å—Ç—Ä—É–∑–∏—è", 0) or 0),
        float(values.get("–ò—Ç–æ–≥–æ", 0) or 0),
    ])

    wb.save(file_path)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –¢–µ–∫—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ /stats
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def generate_stats(stats: dict) -> str:
    """
    –¢–µ–∫—Å—Ç–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ /stats –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    –û–∂–∏–¥–∞–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
      user_stats[user] = {
          '–ü–∞–∫–æ–≤': float, '–í–µ—Å': float, '–ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞': float, '–§–ª–µ–∫—Å–∞': float,
          '–≠–∫—Å—Ç—Ä—É–∑–∏—è': float, '–ò—Ç–æ–≥–æ': float, '–°–º–µ–Ω': int
      }
    """
    if not stats:
        return "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞."

    lines = ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:"]
    for user, data in stats.items():
        lines.append(
            f"{user}:\n"
            f"  üì¶ –ü–∞–∫–æ–≤: {float(data.get('–ü–∞–∫–æ–≤', 0)):.2f} —à—Ç\n"
            f"  ‚öñÔ∏è –í–µ—Å: {float(data.get('–í–µ—Å', 0)):.2f} –∫–≥\n"
            f"  üõçÔ∏è –ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞: {float(data.get('–ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞', 0)):.2f} –∫–≥\n"
            f"  üé® –§–ª–µ–∫—Å–∞: {float(data.get('–§–ª–µ–∫—Å–∞', 0)):.2f} –∫–≥\n"
            f"  üßµ –≠–∫—Å—Ç—Ä—É–∑–∏—è: {float(data.get('–≠–∫—Å—Ç—Ä—É–∑–∏—è', 0)):.2f} –∫–≥\n"
            f"  üßæ –ò—Ç–æ–≥–æ –æ—Ç—Ö–æ–¥–æ–≤: {float(data.get('–ò—Ç–æ–≥–æ', 0)):.2f} –∫–≥\n"
            f"  üóì –°–º–µ–Ω: {int(data.get('–°–º–µ–Ω', 0))}"
        )
    return "\n\n".join(lines)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def _ensure_matplotlib() -> bool:
    """
    –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ matplotlib, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ,
    –µ—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω–æ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ requirements.txt).
    """
    try:
        import matplotlib  # noqa: F401
        import matplotlib.pyplot as plt  # noqa: F401
        return True
    except Exception as e:
        print(f"[WARN] matplotlib –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è: {e}")
        return False


def generate_graphs(user_stats: dict):
    """
    –°—Ç—Ä–æ–∏—Ç 3 –≥—Ä–∞—Ñ–∏–∫–∞ (–±–∞—Ä-—á–∞—Ä—Ç—ã) –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ PNG:
      1) –ü–∞–∫–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      2) –í–µ—Å –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      3) –ò—Ç–æ–≥–æ –æ—Ç—Ö–æ–¥–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±–æ—Ç–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å—Ç—Ä–æ—è—Ç—Å—è –≤ /graf –≤–Ω—É—Ç—Ä–∏ main.py,
    —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è ‚Äî —á–∏—Å—Ç–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è/–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è.
    """
    if not _ensure_matplotlib():
        return []

    import matplotlib.pyplot as plt  # —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ: –Ω–µ –∑–∞–¥–∞–≤–∞—Ç—å —Å—Ç–∏–ª–∏ –∏ —Ü–≤–µ—Ç–∞

    users = list(user_stats.keys())
    if not users:
        return []

    pakov_vals = [float(user_stats[u].get('–ü–∞–∫–æ–≤', 0.0)) for u in users]
    ves_vals   = [float(user_stats[u].get('–í–µ—Å', 0.0)) for u in users]
    waste_vals = [float(user_stats[u].get('–ò—Ç–æ–≥–æ', 0.0)) for u in users]

    out_files = []

    # 1) –ü–∞–∫–æ–≤
    fig = plt.figure()
    plt.bar(users, pakov_vals)
    plt.title("–ü–∞–∫–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    plt.xlabel("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    plt.ylabel("–ü–∞–∫–æ–≤, —à—Ç")
    plt.xticks(rotation=30, ha='right')
    path1 = os.path.join(GRAPHS_DIR, "pakov_by_user.png")
    fig.tight_layout()
    fig.savefig(path1)
    plt.close(fig)
    out_files.append(path1)

    # 2) –í–µ—Å
    fig = plt.figure()
    plt.bar(users, ves_vals)
    plt.title("–í–µ—Å –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    plt.xlabel("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    plt.ylabel("–í–µ—Å, –∫–≥")
    plt.xticks(rotation=30, ha='right')
    path2 = os.path.join(GRAPHS_DIR, "ves_by_user.png")
    fig.tight_layout()
    fig.savefig(path2)
    plt.close(fig)
    out_files.append(path2)

    # 3) –ò—Ç–æ–≥–æ –æ—Ç—Ö–æ–¥–æ–≤
    fig = plt.figure()
    plt.bar(users, waste_vals)
    plt.title("–ò—Ç–æ–≥–æ –æ—Ç—Ö–æ–¥–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    plt.xlabel("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    plt.ylabel("–û—Ç—Ö–æ–¥—ã, –∫–≥")
    plt.xticks(rotation=30, ha='right')
    path3 = os.path.join(GRAPHS_DIR, "waste_by_user.png")
    fig.tight_layout()
    fig.savefig(path3)
    plt.close(fig)
    out_files.append(path3)

    return out_files
