 import os
from openpyxl import Workbook, load_workbook
from datetime import datetime

def get_excel_path(folder: str) -> str:
    os.makedirs(folder, exist_ok=True)
    filename = f"{datetime.now().strftime('%Y-%m')}.xlsx"
    return os.path.join(folder, filename)

def clean_extrusion(raw: str) -> str:
    if not raw:
        return ""
    return raw.lower().replace("—ç–∫—Å—Ç—Ä—É–∑–∏—è", "").strip()

def save_data(data: dict, user: str, user_id: int, folder: str):
    path = get_excel_path(folder)
    file_exists = os.path.isfile(path)

    if file_exists:
        wb = load_workbook(path)
    else:
        wb = Workbook()

    sheet = wb.active
    sheet.title = "–î–∞–Ω–Ω—ã–µ"

    if not file_exists:
        headers = ["–î–∞—Ç–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "ID", "–ü–∞–∫–æ–≤", "–í–µ—Å", "–ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞", "–§–ª–µ–∫—Å–∞", "–≠–∫—Å—Ç—Ä—É–∑–∏—è", "–ò—Ç–æ–≥–æ"]
        sheet.append(headers)

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å—Ç—Ä–æ–∫—É "–ò–¢–û–ì–û", –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    for row in sheet.iter_rows(min_row=2, max_row=sheet.max_row):
        if row[0].value and str(row[0].value).lower() == "–∏—Ç–æ–≥–æ":
            sheet.delete_rows(row[0].row, 1)
            break

    sheet.append([
        datetime.now().strftime('%d.%m.%Y'),
        user,
        user_id,
        data.get("–ü–∞–∫–æ–≤", 0),
        data.get("–í–µ—Å", 0),
        data.get("–ü–∞–∫–µ—Ç–æ—Å–≤–∞—Ä–∫–∞", 0),
        data.get("–§–ª–µ–∫—Å–∞", 0),
        clean_extrusion(data.get("–≠–∫—Å—Ç—Ä—É–∑–∏—è", "")),
        data.get("–ò—Ç–æ–≥–æ", 0),
    ])

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É "–ò–¢–û–ì–û"
    if sheet.max_row > 1:
        totals = ["–ò–¢–û–ì–û", "", ""]
        for col in range(4, 9):  # –°—Ç–æ–ª–±—Ü—ã D‚ÄìH (–∏–Ω–¥–µ–∫—Å 3‚Äì7)
            col_letter = chr(64 + col)
            formula = f"=SUM({col_letter}2:{col_letter}{sheet.max_row})"
            totals.append(formula)
        sheet.append(totals)

    wb.save(path)

def export_excel(folder: str) -> str:
    path = get_excel_path(folder)
    return path if os.path.isfile(path) else None

def reset_month_data(folder: str):
    path = get_excel_path(folder)
    if os.path.exists(path):
        os.remove(path)

def get_user_stats(folder: str) -> str:
    path = get_excel_path(folder)
    if not os.path.exists(path):
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö."

    wb = load_workbook(path)
    sheet = wb.active
    stats = {}

    for row in sheet.iter_rows(min_row=2, values_only=True):
        if str(row[0]).lower() == "–∏—Ç–æ–≥–æ":
            continue
        name = row[1]
        pakov = row[3] or 0
        ves = row[4] or 0
        otxody = (row[5] or 0) + (row[6] or 0)
        if name not in stats:
            stats[name] = {"–ø–∞–∫–æ–≤": 0, "–≤–µ—Å": 0, "–æ—Ç—Ö–æ–¥—ã": 0}
        stats[name]["–ø–∞–∫–æ–≤"] += pakov
        stats[name]["–≤–µ—Å"] += ves
        stats[name]["–æ—Ç—Ö–æ–¥—ã"] += otxody

    msg = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:</b>
"
    for user, d in stats.items():
        msg += (
            f"
üë§ <b>{user}</b>
"
            f"üì¶ –ü–∞–∫–æ–≤: <b>{d['–ø–∞–∫–æ–≤']}</b>
"
            f"‚öñÔ∏è –í–µ—Å: <b>{d['–≤–µ—Å']} –∫–≥</b>
"
            f"‚ôªÔ∏è –û—Ç—Ö–æ–¥—ã: <b>{d['–æ—Ç—Ö–æ–¥—ã']} –∫–≥</b>
"
        )
    return msg
